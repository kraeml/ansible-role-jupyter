---
# tasks file for jupyter

- name: Output "{{ansible_user_id}}"
  debug:
    msg: "The ansible user is {{ansible_user_id}}"

- name: Install jupyter dependencies
  become: yes
  package:
      state: present
      name: "{{jupyter_dependencies_packages}}"
  tags:
    - jupyter_base

- name: Pip3 Version
  command: pip3 --version
  register: pip3_version
  ignore_errors: yes
  changed_when: False
  tags:
    - jupyter_base

- name: Ensure pip3 is installed
  become: yes
  package:
    state: present
    name: python3-pip
  when: pip3_version is failed
  tags:
    - jupyter_base

- block:
  - name: Ensure lates pip is installed
    become: yes
    become_method: sudo
    become_flags: "-H"
    command: pip3 install --ignore-installed pip
    changed_when: False

  - name: Ensure outdated python packages are updated
    shell: pip3 list --outdated --format=legacy | grep -v ansible | grep -v pyxdg | grep -v pycairo | grep -v pygobject | cut -d' ' -f1 | xargs sudo -H pip3 install --upgrade
    changed_when: False
  tags:
    - jupyter_pip_update
    - jupyter_not_base
  when: jupyter_pip_update

- name: Ensure Jupyter and some kernel/extensions are installed
  become: yes
  pip:
    name: "{{item}}"
    executable: pip3
    state: present
  with_items: "{{jupyter_pip3_packages}}"
  tags:
    - jupyter_base

- block:
  - name: Ensure czmq is installed
    stat:
        path:  /usr/local/share/zproject/czmq/
    register: czmq
    ignore_errors: yes
    changed_when: False

  - name: Git repro for iruby dependencies
    git:
        dest: /tmp/czmq
        # Absolute path of where the repository should be checked out to.
        # This parameter is required, unless C(clone) is set to C(no) This change
        # was made in version 1.8.3. Prior to this version, the C(dest) parameter
        # was always required.
        repo: https://github.com/zeromq/czmq
        # git, SSH, or HTTP(S) protocol address of the git repository.
    when: not czmq.stat.exists

  - name: Install jupyter dependencies
    become: yes
    package:
        state: present
        name: libzmq3-dev

  - name: Install czmq
    shell: ./autogen.sh && ./configure && sudo make && sudo make install
    args:
      chdir: /tmp/czmq
    when: not czmq.stat.exists

  - name: Install iruby for {{ansible_user_id}}
    become: yes
    become_flags: "-H"
    shell: "gem install {{item}}"
    args:
        executable: /bin/bash
        creates: /usr/local/bin/iruby
    with_items: "{{gem_packages}}"

  - name: Install iruby kernel via {{ansible_user_id}}
    become: yes
    become_user: "{{ansible_user_id}}"
    shell: "/usr/local/bin/iruby register --force"
    args:
        creates: "{{ansible_user_dir}}/.ipython/kernels/ruby/kernel.json"
    notify: restart_jupyter
  tags:
    - jupyter_iruby
    - jupyter_not_base
  when: jupyter_iruby

- block:
  - name: Stat of jupyter_c_kernel resources
    stat:
      path: "/usr/local/lib/python{{python3_version}}/dist-packages/jupyter_c_kernel/resources/"
    register: p

  - name: Ensure jupyter_c_kernel is installed via pip url
    become: yes
    pip:
      name: "{{item}}"
      executable: pip3
      state: forcereinstall
    with_items:
      - https://raw.githubusercontent.com/kraeml/jupyter-c-kernel/master/dist/jupyter_c_kernel-1.2.8.tar.gz
    when: p.stat.exists == False

  - name: Ensure jupyter_c_kernel is installed
    become: yes
    command: /usr/local/bin/install_c_kernel --sys-prefix
    args:
      creates: /usr/share/jupyter/kernels/c
  tags:
    - jupyter_c_kernel
    - jupyter_not_base
  when: jupyter_c_kernel

- name: Ensure bash kernel is installed
  become: yes
  command: python3 -m bash_kernel.install
  args:
    creates: /usr/local/share/jupyter/kernels/bash
  tags:
    - jupyter_base

- block:
  - name: Ensure ijavascript is installed
    become: yes
    become_method: sudo
    become_flags: "-H"
    command: npm config set unsafe-perm true

  - name: Ensure ijavascript is installed
    become: yes
    become_method: sudo
    become_flags: "-H"
    npm:
        name: ijavascript
        global: yes
        state: present # The state of the node.js library

  - name: Ensure ijavascript kernel is installed
    become: yes
    command: /usr/bin/ijsinstall --install=global
    args:
      creates: /usr/local/share/jupyter/kernels/javascript

  - name: Ensure ijavascript is installed
    become: yes
    become_method: sudo
    become_flags: "-H"
    command: npm config set unsafe-perm false
  tags:
    - jupyter_ijavascript
    - jupyter_not_base
  when: jupyter_ijavascript

- name: Get nbextensions
  command: jupyter nbextension list
  register: jupyter_nbextensions
  changed_when: False
  tags:
    - jupyter_base

- block:
  - name: Ensure RISE installed
    become: yes
    command: jupyter-nbextension install rise --py --sys-prefix
    args:
      creates: /usr/local/share/jupyter/nbextensions/rise/
    register: jupyter_rise

  - name: Ensure RISE enabled
    become: yes
    command: jupyter-nbextension enable rise --py --sys-prefix
    when: jupyter_rise.changed
  tags:
    - rise
    - jupyter_base

- name: Display nbextension
  debug:
      var: jupyter_nbextensions
      verbosity: 2

- name: Ensure notebook directory exists
  file:
      path: "{{ansible_user_dir}}/{{item}}"
      state: directory
      owner: "{{ansible_user_id}}"
      group: "{{ansible_user_id}}"
  with_items:
      - notebooks
      - .jupyter
  tags:
    - jupyter_base

- name: Create jupyter config
  become: yes
  become_user: "{{ansible_user_id}}"
  template:
      src: jupyter_notebook_config.py.j2
      dest: "{{ansible_user_dir}}/.jupyter/jupyter_notebook_config.py"
      owner: "{{ansible_user_id}}"
      group: "{{ansible_user_id}}"
  notify:
    - restart_jupyter
  tags:
    - jupyter_base

- name: copies the nbextensionsâ€™ javascript and css files
  become: yes
  become_user: "{{ansible_user_id}}"
  command: jupyter contrib nbextension install --user
  args:
    creates: /home/{{ansible_user_id}}/.local/share/jupyter/nbextensions/
  register:
    nbextension_install
  tags:
    - jupyter_base

- name: Enable nbextensions
  become: yes
  become_user: "{{ansible_user_id}}"
  command: jupyter nbextensions_configurator enable --user
  when: nbextension_install.changed
  tags:
    - jupyter_base

- name: Get nbextensions
  command: jupyter nbextension list
  register: jupyter_nbextensions
  changed_when: False
  tags:
    - jupyter_base
- name: Display nbextension
  debug:
      var: jupyter_nbextensions
      #verbosity: 2

- name: Ensure some nbextensions for sys are activated
  become: yes
  command: jupyter nbextension enable {{item.name}} --py --sys-prefix
  # ToDo: when: jupyter_nbextensions.stdout.find("jupyter-js-widgets/extension \u001b[32m enabled") != -1
  with_items:
    - name: widgetsnbextension
  tags:
    - jupyter_base

- name: Ensure some nbextensions are activated
  become: yes
  become_user: "{{ansible_user_id}}"
  command: jupyter nbextension enable {{item.name}} --user
  # ToDo: when: jupyter_nbextensions.stdout.find("jupyter-js-widgets/extension \u001b[32m enabled") != -1
  with_items:
    - name: spellchecker
  tags:
    - jupyter_base

- name: Ensure de_DE dict for spellchecker is installed
  become: yes
  become_user: "{{ansible_user_id}}"
  command: python3 /home/{{ansible_user_id}}/.local/share/jupyter/nbextensions/spellchecker/download_new_dict.py
  args:
    creates:  /home/{{ansible_user_id}}/.local/share/jupyter/nbextensions/spellchecker/typo/dictionaries/de_DE.aff

#- name: Enable ipyleaflet
#  become: yes
#  command: jupyter nbextension enable --py --sys-prefix ipyleaflet

- name: Enable and start Jupyter as service
  become: yes
  template:
      src: jupyter.service.j2
      dest: /lib/systemd/system/jupyter.service
      mode: 0644
      owner: root
      group: root
  notify:
    - restart_jupyter
  tags:
    - jupyter_base
