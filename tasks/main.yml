---
# tasks file for jupyter

- name: Output "{{ansible_user_id}}"
  debug:
    msg: "The ansible user is {{ansible_user_id}}"

- name: Install jupyter dependencies
  become: yes
  package:
      state: present
      name: "{{jupyter_dependencies_packages}}"
  tags:
    - jupyter_base

- name: Pip3 Version
  command: pip3 --version
  register: pip3_version
  ignore_errors: yes
  changed_when: False
  tags:
    - jupyter_base

- name: Ensure pip3 is installed
  become: yes
  package:
    state: present
    name: python3-pip
  when: pip3_version is failed
  tags:
    - jupyter_base

- block:
  - name: Ensure lates pip is installed
    become: yes
    become_method: sudo
    become_flags: "-H"
    command: pip3 install --ignore-installed pip
    changed_when: False

  - name: Ensure outdated python packages are updated
    shell: pip3 list --outdated --format=legacy | grep -v ansible | grep -v pyxdg | grep -v pycairo | grep -v pygobject | cut -d' ' -f1 | xargs sudo -H pip3 install --upgrade
    changed_when: False
  tags:
    - jupyter_pip_update
    - jupyter_not_base
  when: jupyter_pip_update

# ToDo in a loop not proper
- name: Workaround pip install Jupyter
  block:
  - name: Ensure Jupyter and some kernel/extensions are installed
    become: yes
    pip:
      name: "{{jupyter_pip3_packages}}"
      executable: pip3
      state: present
    tags:
      - jupyter_base

- block:
  - name: Install iruby dependencies
    become: yes
    package:
        state: present
        name: "{{jupyter_iruby_dependencies_packages}}"

  - name: Install iruby dependencies ubuntu 17.04 and newer
    become: yes
    package:
        state: present
        name:
          - libzmq3-dev
          - libczmq-dev
    when: ansible_distribution == 'Ubuntu' and ansible_distribution_major_version|int >= 17

  - name: Install iruby dependencies ubuntu 16.04 and older
    become: yes
    package:
        state: present
        name:
          - autoconf
          - pkg-config
          - libzmq-dev
    when: ansible_distribution == 'Ubuntu' and ansible_distribution_major_version|int <= 16

  - name: Ensure czmq is installed
    stat:
        path:  /usr/local/share/zproject/czmq/
    register: czmq
    ignore_errors: yes
    changed_when: False

  - debug:
      var: czmq
      verbosity: 2

  - name: Git repro for iruby dependencies for ubuntu 16.04 and older
    git:
        dest: /tmp/czmq
        repo: https://github.com/zeromq/czmq
    when: (not czmq.stat.exists) and (ansible_distribution == 'Ubuntu' and ansible_distribution_major_version|int <= 16)

  - name: Install czmq for ubuntu 16.04 and older
    shell: ./autogen.sh && ./configure && sudo make && sudo make install
    args:
      chdir: /tmp/czmq
    when: (not czmq.stat.exists) and (ansible_distribution == 'Ubuntu' and ansible_distribution_major_version|int <= 16)

  - name: Install iruby for {{ansible_user_id}}
    become: yes
    become_flags: "-H"
    shell: "gem install {{item}}"
    args:
        executable: /bin/bash
        creates: /usr/local/bin/iruby
    with_items: "{{gem_packages}}"

  - name: Install iruby kernel via {{ansible_user_id}}
    become: yes
    become_user: "{{ansible_user_id}}"
    shell: "/usr/local/bin/iruby register --force"
    args:
        creates: "{{ansible_user_dir}}/.ipython/kernels/ruby/kernel.json"
    notify: restart_jupyter
  tags:
    - jupyter_iruby
    - jupyter_not_base
  when: jupyter_iruby

- block:
  - name: Which python3 version is installed
    shell: "python3 --version | cut -d ' ' -f 2"
    register: python3_version

  - debug:
      var: python3_version
      verbosity: 2

  - name: Stat of jupyter_c_kernel resources
    stat:
      path: "/usr/local/lib/python{{python3_version.stdout}}/dist-packages/jupyter_c_kernel/resources/"
    register: p

  - name: Ensure jupyter_c_kernel is installed via pip url
    become: yes
    pip:
      name:
        - https://raw.githubusercontent.com/kraeml/jupyter-c-kernel/master/dist/jupyter_c_kernel-1.2.8.tar.gz
      executable: pip3
      state: forcereinstall
    when: p.stat.exists == False

  - name: Ensure jupyter_c_kernel is installed
    become: yes
    command: /usr/local/bin/install_c_kernel --sys-prefix
    args:
      creates: /usr/share/jupyter/kernels/c
  tags:
    - jupyter_c_kernel
    - jupyter_not_base
  when: jupyter_c_kernel

- name: Ensure bash kernel is installed
  become: yes
  command: python3 -m bash_kernel.install
  args:
    creates: /usr/local/share/jupyter/kernels/bash
  tags:
    - jupyter_base

- name: Ensure sshkernel kernel is installed
  become: yes
  command: python3 -m sshkernel install
  args:
    creates: /usr/local/share/jupyter/kernels/ssh
  tags:
    - jupyter_base

- block:
  - name: Nodejs and dependencies are installed
    command: node --version
    register: system_nodejs_version
    ignore_errors: yes
    changed_when: False

  - debug:
      var: system_nodejs_version
      verbosity: 2

  - name: Ensure Nodejs and dependencies are installed
    become: yes
    package:
      state: present
      name:
        - nodejs
        - npm
    when: system_nodejs_version is failed

  - name: Set npm unsafe-perm
    become: yes
    become_method: sudo
    become_flags: "-H"
    command: npm config set unsafe-perm true

  - name: Ensure ijavascript is installed
    become: yes
    become_method: sudo
    become_flags: "-H"
    npm:
        name: ijavascript
        global: yes
        state: present # The state of the node.js library

  - name: Path of ijsinstall
    command: which ijsinstall
    register: ijsinstall_path
    ignore_errors: yes
    changed_when: False

  - debug:
      var: ijsinstall_path
      verbosity: 2

  - name: Ensure ijavascript kernel is installed
    become: yes
    command: "{{ijsinstall_path.stdout}} --install=global"
    args:
      creates: /usr/local/share/jupyter/kernels/javascript

  - name: npm unset unsafe-perm
    become: yes
    become_method: sudo
    become_flags: "-H"
    command: npm config set unsafe-perm false
  tags:
    - jupyter_ijavascript
    - jupyter_not_base
  when: jupyter_ijavascript

- block:
  # ToDo imongo via github
  # rights for log workaround
  # imongo is not stable
  # not for jupyter-lab
  # 07.2018
  - name: Debug information
    debug:
      msg: Imongo for jupyter
  tags:
    - jupyter_imongo
    - jupyter_not_base
  when: jupyter_imongo

- name: Get nbextensions
  command: jupyter nbextension list
  register: jupyter_nbextensions
  changed_when: False
  tags:
    - jupyter_base

- block:
  - name: Ensure RISE installed
    become: yes
    command: jupyter-nbextension install rise --py --sys-prefix
    #args:
    #  creates: /usr/local/share/jupyter/nbextensions/rise/
    #register: jupyter_rise

  - name: Ensure RISE enabled
    become: yes
    command: jupyter-nbextension enable --py --sys-prefix {{item}}
    #when: jupyter_rise.changed
    with_items:
      - rise
      #- ipywidgets
      #- jupyros
    notify:
      - restart_jupyter
      - rebuild_jupyter

  #- name: rebuild_jupyter
  #  become: yes
  #  command: jupyter lab build

  #- name: Enable jupyteros
  #  become: yes
  #  command: jupyter labextension install {{item}}
  #  with_items:
  #    - jupyter-ros
  #    - " @jupyter-widgets/jupyterlab-manager"
  tags:
    - rise
    - jupyter_base
    - todo

- name: Display nbextension
  debug:
      var: jupyter_nbextensions
      verbosity: 2

- name: Ensure notebook directory exists
  file:
      path: "{{ansible_user_dir}}/{{item}}"
      state: directory
      owner: "{{ansible_user_id}}"
      group: "{{ansible_user_id}}"
  with_items:
      - notebooks
      - .jupyter
  tags:
    - jupyter_base

- name: Create jupyter config
  become: yes
  become_user: "{{ansible_user_id}}"
  template:
      src: jupyter_notebook_config.py.j2
      dest: "{{ansible_user_dir}}/.jupyter/jupyter_notebook_config.py"
      owner: "{{ansible_user_id}}"
      group: "{{ansible_user_id}}"
  notify:
    - rebuild_jupyter
    - restart_jupyter
  tags:
    - jupyter_base

- name: copies the nbextensionsâ€™ javascript and css files
  become: yes
  become_user: "{{ansible_user_id}}"
  command: jupyter contrib nbextension install --user
  args:
    creates: /home/{{ansible_user_id}}/.local/share/jupyter/nbextensions/
  register:
    nbextension_install
  tags:
    - jupyter_base
    - todo

- name: Enable nbextensions
  become: yes
  become_user: "{{ansible_user_id}}"
  command: jupyter nbextensions_configurator enable --user
  when: nbextension_install.changed
  tags:
    - jupyter_base
    - todo

- name: Get nbextensions
  shell: jupyter nbextension list
  register: jupyter_nbextensions
  changed_when: False
  tags:
    - jupyter_base
     todo
- name: Display nbextension
  debug:
      var: jupyter_nbextensions
      verbosity: 2

- name: Ensure some nbextensions for sys are activated
  become: yes
  command: jupyter nbextension enable {{item.name}} --py --sys-prefix
  # ToDo when: jupyter_nbextensions.stdout.find("jupyter-js-widgets/extension") != -1
  with_items:
    - name: widgetsnbextension
      extension: jupyter-js-widgets/extension
  tags:
    - jupyter_base
    - todo

- name: Ensure some nbextensions are activated
  become: yes
  become_user: "{{ansible_user_id}}"
  command: jupyter nbextension enable {{item.name}} --user
  # ToDo: when: jupyter_nbextensions.stdout.find("jupyter-js-widgets/extension \u001b[32m enabled") != -1
  with_items:
    - name: spellchecker/main
    - name: execute_time/ExecuteTime
    - name: highlighter/highlighter
    - name: python-markdown/main
    - name: gist_it/main
    - name: table_beautifier/main
    - name: highlight_selected_word/main
    - name: toc2/main
    - name: varInspector/main
    - name: printview/main
    - name: hinterland/hinterland
    - name: code_font_size/code_font_size
    - name: init_cell/main
    - name: tree-filter/index
  tags:
    - jupyter_base
    - todo

- name: Ensure de_DE dict for spellchecker is installed
  become: yes
  become_user: "{{ansible_user_id}}"
  command: python3 /home/{{ansible_user_id}}/.local/share/jupyter/nbextensions/spellchecker/download_new_dict.py
  args:
    creates:  /home/{{ansible_user_id}}/.local/share/jupyter/nbextensions/spellchecker/typo/dictionaries/de_DE.aff
  # ToDo Wegen pi-gen install
  ignore_errors: yes
  tags:
    - jupyter_base
    - todo

#- name: Enable ipyleaflet
#  become: yes
#  command: jupyter nbextension enable --py --sys-prefix ipyleaflet

- name: Enable and start Jupyter as service
  become: yes
  template:
      src: jupyter.service.j2
      dest: /lib/systemd/system/jupyter.service
      mode: 0644
      owner: root
      group: root
  notify:
    - restart_jupyter
  tags:
    - jupyter_base
